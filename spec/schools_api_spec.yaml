openapi: "3.0.0"

info:
  title: Schools API
  description: This API manages a list of colleges in the United States.
  license:
    name: MIT
  version: 1.0.0

components:
  parameters:
    LimitParam:
      name: limit
      in: query
      description: Maximum resources to return
      required: false
      schema:
        type: integer
        format: int32
        default: 100
    OffsetParam:
      name: offset
      in: query
      description: Offset into the collection of resources to return
      required: false
      schema:
        type: integer
        format: int32
        default: 0

  schemas:
    Schools:
      description: An array of `School` objects.
      type: array
      items:
        $ref: '#/components/schemas/School'
    School:
      description: A school object.
      type: object
      properties:
        name:
          description: The name of the school.
          type: string
          minLength: 1
          maxLength: 255
        id:
          description: The id of the school.
          type: integer
          format: int32
          readOnly: true
      required:
        - name
    Error:
      type: object
      properties:
        message:
          description: A human readable message describing the error.
          type: string

  responses:
    NotFoundErrorResponse:
      description: The specified school was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ConflictErrorResponse:
      description: This error is returned when a school with the same name already exists.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  requestBodies:
    SchoolRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/School'

paths:
  /schools:
    get:
      summary: List all schools
      description: Returns all schools paginated by the `limit` and `offset` parameters.
      operationId: ListSchools
      tags:
        - schools
      parameters:
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/OffsetParam'
      responses:
        '200':
          description: A list of schools.
          content:
            application/json:
              schema:
                type: object
                properties:
                  schools:
                    $ref: '#/components/schemas/Schools'
                  total_count:
                    description: The total number of schools.
                    type: integer
                    format: int32
                  next:
                    description: A URL that links to the next page of results.
                    type: string
                  prev:
                    description: A URL that links to the previous page of results.
                    type: string
        '400':
          description: Bad request or invalid parameter.
        '500':
          description: Internal server error.
    post:
      summary: Add a new school
      description: Add a new school to the list of schools.
      operationId: AddSchool
      tags:
        - school
      requestBody:
        $ref: '#/components/requestBodies/SchoolRequestBody'
      responses:
        '200':
          description: A school.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/School'
        '409':
          $ref: '#/components/responses/ConflictErrorResponse'

  /schools/{schoolId}:
    parameters:
      - name: schoolId
        in: path
        required: true
        description: The school's identifier, as schoolId
        schema:
          type: integer
          format: int32

    get:
      summary: Get a specific school
      description: Returns the school referenced by `schoolId` in the path.
      operationId: GetSchool
      tags:
        - school
      responses:
        '200':
          description: A school.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/School'
        '404':
          $ref: '#/components/responses/NotFoundErrorResponse'
    put:
      summary: Update a specific school
      description: Updates the school referenced by `schoolId` in the path.
      operationId: UpdateSchool
      tags:
        - school
      requestBody:
        $ref: '#/components/requestBodies/SchoolRequestBody'
      responses:
        '200':
          description: A school.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/School'
        '404':
          $ref: '#/components/responses/NotFoundErrorResponse'
